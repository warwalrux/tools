#!/usr/bin/python3

""" warwalrux object dumper """

import argparse
import ast
import bs4
import configparser
import json
import pathlib
import pickle
import pprint
import yaml
import sys

import jinja2

PP = pprint.PrettyPrinter(indent=4)

PARSER = argparse.ArgumentParser()
PARSER.add_argument('-f', '--file', help="input file")
PARSER.add_argument('-d', '--debug', action='store_true', help="debug switch")

LOADER = PARSER.add_mutually_exclusive_group(required=True)
LOADER.add_argument('-a', '--ast', action='store_true', help="Use AST Parser")
LOADER.add_argument('-c', '--config', action='store_true', help="Use ConfigParser")
LOADER.add_argument('-y', '--yaml', action='store_true', help="Use YAML Parser")
LOADER.add_argument('-j', '--json', action='store_true', help="Use JSON PARSER")
LOADER.add_argument('-H', '--html', action='store_true', help="Use HTML PARSER")
LOADER.add_argument('-p', '--pickle', action='store_true', help="Use Pickle Object PARSER")

PRINTER = PARSER.add_mutually_exclusive_group(required=True)
PRINTER.add_argument('-J', '--jinja', help="Jinja Template string")
PRINTER.add_argument('-F', '--formatted', action='store_true', help="Print with formatting")
PRINTER.add_argument('--to-picl', action='store_true', help="Dump as a Pickled object")
PRINTER.add_argument('--to-yaml', action='store_true', help="Dump as a YAML object")
PRINTER.add_argument('--to-json', action='store_true', help="Dump as a JSON object")

ARGS = PARSER.parse_args()

if ARGS.file:
    DATA = open(ARGS.file, 'rb')
    STEM = pathlib.Path(ARGS.file).stem
else:
    DATA = sys.stdin

# Parse the file with the chosen Loader method
if ARGS.ast:
    RESULTS = ast.literal_eval(DATA.read())
elif ARGS.json:
    RESULTS = json.loads(DATA.read())
elif ARGS.yaml:
    RESULTS = yaml.safe_load(DATA.read())
elif ARGS.pickle:
    RESULTS = pickle.load(DATA)
elif ARGS.html:
    RESULTS = bs4.BeautifulSoup(DATA.read(), "html.parser")
elif ARGS.config:
    RESULTS = configparser.ConfigParser()
    RESULTS.read(ARGS.file)

# Output the file using the preferred output method
if ARGS.jinja:
    TEMPLATE = jinja2.Template(ARGS.jinja)
    print(TEMPLATE.render(data=RESULTS))
elif ARGS.formatted:
    if ARGS.debug:
        print(dir(RESULTS))
        print(RESULTS.read_dict())
    else:
        PP.pprint(RESULTS)
elif ARGS.to_yaml:
    OUTFILE = open("%s.yaml"%STEM, 'w+')
    yaml.dump(RESULTS, OUTFILE)
    print("Dumped to %s" % OUTFILE.name)
elif ARGS.to_json:
    OUTFILE = open("%s.json"%STEM, 'w+')
    json.dump(RESULTS, OUTFILE)
    print("Dumped to %s" % OUTFILE.name)
elif ARGS.to_picl:
    OUTFILE = open("%s.picl"%STEM, 'w+b')
    pickle.dump(RESULTS, OUTFILE)
    print("Dumped to %s" % OUTFILE.name)
