#!/usr/bin/env python3 -B

import argparse
import json
import os
import pprint
import re
import sys
import tabulate

DPKG_LOGFILE = "/var/log/dpkg.log"
# Removed: startup, status
ACTIONS = ["install", "remove", "upgrade" ]
STATUSES = [ "not-installed", "config-files", "half-installed", "unpacked", "half-configured", "triggers-awaited", "triggers-pending", "installed" ]
tableformat="fancy-grid"


class History():
    def __init__(self):
        self.jobs = {}
        job_id = 1
        if os.path.isfile(DPKG_LOGFILE):
            history = {}
            with open(DPKG_LOGFILE, 'rb') as f:
                data = f.readlines()
            f.close()
            for record in data:
                record = record.decode('utf8').rstrip().split()
                
                # Ignore the seconds field in the time string
                record[1] = ':'.join([record[1].split(':')[0], record[1].split(':')[1]])
                if record[0] not in history.keys():
                    history[record[0]] = {}
                if record[1] not in history[record[0]].keys():
                    history[record[0]][record[1]] = []
                history[record[0]][record[1]].append(record[2:])

        for date in history.keys():
            for time in history[date].keys():
                self.jobs[job_id] = {}
                self.jobs[job_id]['date'] = date
                self.jobs[job_id]['time'] = time
                self.jobs[job_id]['data'] = []
                [[ self.jobs[job_id]['data'].append(line) for line in history[date][time] ]]
                job_id += 1
        
    def _print_table(self, table):
        headers = table[0]
        table.pop(0)
        print(tabulate.tabulate(table, headers, tablefmt=tableformat))


    def printJobs(self):
        output = [[ "Job ID", "Date", "Action" ]]
        for job in self.jobs:
            t = [ job, self.jobs[job]['date'], []]
            for line in self.jobs[job]['data']:
                if line[0] in ACTIONS and line[0] not in t[2]:
                    t[2].append(line[0])
            output.append(t)
        self._print_table(output)

if __name__ == "__main__":
    history = History()
    history.printJobs()
